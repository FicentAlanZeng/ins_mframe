// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name moduledframe
import Foundation
import Moya
import ObjectMapper
import RxSwift
import Swift
import _Concurrency
@_exported import moduledframe
@objc @_inheritsConvenienceInitializers @objcMembers open class INS_ApiCourseService : ObjectiveC.NSObject {
  @objc required override dynamic public init()
  final public class func loadRequest<T, U>(_ request: U) -> moduledframe.INS_Observable<T> where T : moduledframe.INS_SuperModel, U : moduledframe.INS_IXRequest
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class INS_ConfigManager : ObjectiveC.NSObject {
  public func isInitalSucceed() -> Swift.Bool
  @objc deinit
}
public protocol INS_ParseEngine {
  func parse<T>(type: T.Type, reponse response: Any) throws -> T where T : moduledframe.INS_SuperModel
}
@_hasMissingDesignatedInitializers public class INS_DefaultParseEngine : moduledframe.INS_ParseEngine {
  public func parse<T>(type: T.Type, reponse response: Any) throws -> T where T : moduledframe.INS_SuperModel
  @objc deinit
}
@objcMembers open class INS_BaseParameterModel : ObjectMapper.Mappable {
  @objc required public init()
  required public init?(map: ObjectMapper.Map)
  public func mapping(map: ObjectMapper.Map)
  @objc deinit
}
public enum INS_MainScheduler : Swift.Int {
  case instance
  case asyncInstance
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objcMembers final public class INS_Observable<T> : ObjectiveC.NSObject where T : moduledframe.INS_SuperModel {
  @objc required public init(_ request: moduledframe.INS_RequestTask)
  final public func subscribe(on scheduler: moduledframe.INS_MainScheduler) -> moduledframe.INS_Observable<T>
  final public func observe(on scheduler: moduledframe.INS_MainScheduler) -> moduledframe.INS_Observable<T>
  final public func observe(on progressHandler: ((Swift.Int64, Swift.Int64) -> Swift.Void)?) -> moduledframe.INS_Observable<T>
  final public func onResult(handler: @escaping ((T?, Swift.Error?) -> Swift.Void))
  final public func compat<V>(_ handler: @escaping ((T?, Swift.Error?) -> moduledframe.INS_Observable<V>), resultHandler cHandler: @escaping ((V?, Swift.Error?) -> Swift.Void)) where V : moduledframe.INS_SuperModel
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers final public class INS_RetrofitUtil : ObjectiveC.NSObject {
  final public class func create<T>(serviceClass cls: T.Type) -> T where T : moduledframe.INS_ApiCourseService
  @objc final public class func getVersion() -> Swift.String
  final public class func initWithKey(_ insKey: Swift.String, baseURL url: Foundation.URL, enableLog on: Swift.Bool? = false, parseEngine engine: moduledframe.INS_ParseEngine? = nil) -> Swift.Bool
  @objc deinit
}
extension RxSwift.Observable {
  public func mapObject<T>(type: T.Type, engine parseEngine: moduledframe.INS_ParseEngine) -> RxSwift.Observable<T> where T : moduledframe.INS_SuperModel
  public func mapArray<T>(type: T.Type) -> RxSwift.Observable<[T]> where T : moduledframe.INS_SuperModel
}
public enum INS_RxSwiftError {
  public typealias RawValue = Swift.String
  case keyInvalidError
  case parseJSONError
  case serverError
  case otherError
  public static func == (a: moduledframe.INS_RxSwiftError, b: moduledframe.INS_RxSwiftError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension moduledframe.INS_RxSwiftError : Swift.Error {
}
public protocol INS_IXRequest {
  func ins_baseURL() -> Foundation.URL?
  func ins_path() -> Swift.String
  func ins_httpMethod() -> moduledframe.INS_HTTP_Method
  func ins_headerFields() -> Swift.Dictionary<Swift.String, Swift.String>?
  func ins_bodyParameters() -> Swift.Dictionary<Swift.String, Swift.String>?
  func ins_formDatas() -> [moduledframe.INS_MultipartFormData]?
}
public protocol INS_IXRequestTargetType : Moya.TargetType {
}
public struct INS_MultipartFormData {
}
public typealias INS_HTTP_Method = Moya.Method
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers final public class INS_RequestTask : ObjectiveC.NSObject, moduledframe.INS_IXRequestTargetType {
  @objc override dynamic public init()
  @objc final public var baseURL: Foundation.URL {
    @objc get
  }
  @objc final public var path: Swift.String {
    @objc get
  }
  final public var method: Moya.Method {
    get
  }
  final public var task: Moya.Task {
    get
  }
  @objc final public var headers: [Swift.String : Swift.String]? {
    @objc get
  }
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers final public class INS_RequestBuilder : ObjectiveC.NSObject {
  @objc public static func create() -> moduledframe.INS_RequestBuilder
  @objc final public func setURL(_ url: Foundation.URL) -> moduledframe.INS_RequestBuilder
  @objc final public func setPath(_ path: Swift.String) -> moduledframe.INS_RequestBuilder
  final public func setHttpMethod(_ method: moduledframe.INS_HTTP_Method) -> moduledframe.INS_RequestBuilder
  @objc final public func setHeaders(_ headers: [Swift.String : Swift.String]?) -> moduledframe.INS_RequestBuilder
  @objc final public func setBodyParameters(_ bodyParameters: [Swift.String : Swift.String]?) -> moduledframe.INS_RequestBuilder
  final public func setFormDatas(_ formDatas: [moduledframe.INS_MultipartFormData]?) -> moduledframe.INS_RequestBuilder
  @objc final public func builder() -> moduledframe.INS_Request
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class INS_Request : ObjectiveC.NSObject, moduledframe.INS_IXRequest {
  public func ins_baseURL() -> Foundation.URL?
  public func ins_path() -> Swift.String
  public func ins_httpMethod() -> moduledframe.INS_HTTP_Method
  public func ins_headerFields() -> Swift.Dictionary<Swift.String, Swift.String>?
  public func ins_bodyParameters() -> Swift.Dictionary<Swift.String, Swift.String>?
  public func ins_formDatas() -> [moduledframe.INS_MultipartFormData]?
  @objc deinit
}
public typealias INS_Map = ObjectMapper.Map
@_hasMissingDesignatedInitializers open class INS_SuperModel {
  required public init?(map: moduledframe.INS_Map)
  open func mapping(map: moduledframe.INS_Map)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers final public class INS_SafeStringTransform : ObjectiveC.NSObject, ObjectMapper.TransformType {
  public typealias Object = Swift.String
  public typealias JSON = Swift.String
  @objc override dynamic public init()
  final public func transformFromJSON(_ value: Any?) -> moduledframe.INS_SafeStringTransform.Object?
  final public func transformToJSON(_ value: moduledframe.INS_SafeStringTransform.Object?) -> moduledframe.INS_SafeStringTransform.JSON?
  @objc deinit
}
@objc @_inheritsConvenienceInitializers final public class INS_SafeBoolTransform : ObjectiveC.NSObject, ObjectMapper.TransformType {
  public typealias Object = Swift.Bool
  public typealias JSON = Swift.String
  @objc override dynamic public init()
  final public func transformFromJSON(_ value: Any?) -> moduledframe.INS_SafeBoolTransform.Object?
  final public func transformToJSON(_ value: moduledframe.INS_SafeBoolTransform.Object?) -> moduledframe.INS_SafeBoolTransform.JSON?
  @objc deinit
}
@objc @_inheritsConvenienceInitializers final public class INS_SafeDicTransform : ObjectiveC.NSObject, ObjectMapper.TransformType {
  public typealias Object = Swift.Dictionary<Swift.String, Any>
  public typealias JSON = Swift.Dictionary<Swift.String, Any>
  @objc override dynamic public init()
  final public func transformFromJSON(_ value: Any?) -> moduledframe.INS_SafeDicTransform.Object?
  final public func transformToJSON(_ value: moduledframe.INS_SafeDicTransform.Object?) -> moduledframe.INS_SafeDicTransform.JSON?
  @objc deinit
}
extension moduledframe.INS_MainScheduler : Swift.Equatable {}
extension moduledframe.INS_MainScheduler : Swift.Hashable {}
extension moduledframe.INS_MainScheduler : Swift.RawRepresentable {}
extension moduledframe.INS_RxSwiftError : Swift.Equatable {}
extension moduledframe.INS_RxSwiftError : Swift.Hashable {}
extension moduledframe.INS_SuperModel : ObjectMapper.Mappable {}
