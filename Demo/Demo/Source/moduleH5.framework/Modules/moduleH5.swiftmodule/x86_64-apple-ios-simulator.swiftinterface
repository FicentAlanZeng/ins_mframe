// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name moduleH5
import AVFoundation
import Foundation
import PhotosUI
import SnapKit
import Swift
import UIKit
import WebKit
import _Concurrency
@_exported import moduleH5
import moduleUI
import moduleUser
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class INS_WKWebViewController : moduleH5.INS_WKWebBaseViewController {
  @objc @_Concurrency.MainActor(unsafe) open var urlStr: Swift.String?
  @objc @_Concurrency.MainActor(unsafe) open var titleStr: Swift.String?
  @objc @_Concurrency.MainActor(unsafe) open var titleColor: UIKit.UIColor?
  @objc @_Concurrency.MainActor(unsafe) open var navigationBarBackgroudColor: UIKit.UIColor?
  @_Concurrency.MainActor(unsafe) open var navigationBarHidden: Swift.Bool?
  @_Concurrency.MainActor(unsafe) open var statusBarHidden: Swift.Bool?
  @_Concurrency.MainActor(unsafe) open var statusBarTextStyle: UIKit.UIStatusBarStyle?
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var prefersStatusBarHidden: Swift.Bool {
    @_Concurrency.MainActor(unsafe) @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var preferredStatusBarStyle: UIKit.UIStatusBarStyle {
    @_Concurrency.MainActor(unsafe) @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func didReceiveMemoryWarning()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override open func imagePickerControllerDidCancel(_ picker: UIKit.UIImagePickerController)
  @_Concurrency.MainActor(unsafe) @objc override open func imagePickerController(_ picker: UIKit.UIImagePickerController, didFinishPickingMediaWithInfo info: [UIKit.UIImagePickerController.InfoKey : Any])
}
public let INS_MODULE_H5_VERSION: Swift.String
extension UIKit.UIImage {
  open func ins_compressToData(underKB targetSizeKB: CoreGraphics.CGFloat, underWH targetSizeWH: CoreGraphics.CGFloat) -> Foundation.Data?
  open func ins_compressToData() -> Foundation.Data?
  open func ins_compressToData(underKB targetSizeKB: CoreGraphics.CGFloat) -> Foundation.Data?
  open func ins_compressToData(underWH targetSizeWH: CoreGraphics.CGFloat) -> Foundation.Data?
  open func ins_fixOrientation() -> UIKit.UIImage
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class INS_DEMOWKWebViewController : moduleH5.INS_WKWebBaseViewController {
  @objc @_Concurrency.MainActor(unsafe) open var urlStr: Swift.String?
  @objc @_Concurrency.MainActor(unsafe) open var titleStr: Swift.String?
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func didReceiveMemoryWarning()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @available(iOS 9.0, *)
public class INS_WKWebViewJavascriptBridge : ObjectiveC.NSObject {
  public var isLogEnable: Swift.Bool {
    get
    set(newValue)
  }
  public init(webView: WebKit.WKWebView)
  @objc deinit
  public func reset()
  public func register(handlerName: Swift.String, handler: @escaping moduleH5.INS_WKWebViewJavascriptBridgeBase.Handler)
  public func remove(handlerName: Swift.String) -> moduleH5.INS_WKWebViewJavascriptBridgeBase.Handler?
  public func call(handlerName: Swift.String, data: Any? = nil, callback: moduleH5.INS_WKWebViewJavascriptBridgeBase.Callback? = nil)
}
extension moduleH5.INS_WKWebViewJavascriptBridge : WebKit.WKScriptMessageHandler {
  @objc dynamic public func userContentController(_ userContentController: WebKit.WKUserContentController, didReceive message: WebKit.WKScriptMessage)
}
@objc @_inheritsConvenienceInitializers @available(iOS 9.0, *)
public class INS_WKWebViewJavascriptBridgeBase : ObjectiveC.NSObject {
  public typealias Callback = (_ responseData: Any?) -> Swift.Void
  public typealias Handler = (_ parameters: [Swift.String : Any]?, _ callback: moduleH5.INS_WKWebViewJavascriptBridgeBase.Callback?) -> Swift.Void
  public typealias Message = [Swift.String : Any]
  @objc override dynamic public init()
  @objc deinit
}
public typealias WVJBHandler = ([Swift.String : Any]?, moduleH5.INS_WKWebViewJavascriptBridgeBase.Callback?) -> Swift.Void
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class INS_WKWebBaseViewController : moduleUI.INS_BaseViewController, UIKit.UIImagePickerControllerDelegate, UIKit.UINavigationControllerDelegate {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc @_Concurrency.MainActor(unsafe) final public func currentTitle() -> Swift.String?
  @objc @_Concurrency.MainActor(unsafe) final public func setNavTitle(_ title: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillAppear(_ animated: Swift.Bool)
  @objc @_Concurrency.MainActor(unsafe) final public func bridgeRegisterNativeMethodForJS(_ methodName: Swift.String, _ callback: @escaping moduleH5.WVJBHandler)
  @objc @_Concurrency.MainActor(unsafe) final public func bridgeCallJSMethod(_ methodName: Swift.String, _ data: Any? = nil, _ callBackHandler: moduleH5.INS_WKWebViewJavascriptBridgeBase.Callback? = nil)
  @objc @_Concurrency.MainActor(unsafe) final public func clearCache()
  @objc override dynamic open func observeValue(forKeyPath keyPath: Swift.String?, of object: Any?, change: [Foundation.NSKeyValueChangeKey : Any]?, context: Swift.UnsafeMutableRawPointer?)
  @objc deinit
  @objc @_Concurrency.MainActor(unsafe) open func webViewLoadDidFinish()
  @nonobjc @_Concurrency.MainActor(unsafe) open func imagePickerControllerDidCancel(_ picker: UIKit.UIImagePickerController)
  @nonobjc @_Concurrency.MainActor(unsafe) open func imagePickerController(_ picker: UIKit.UIImagePickerController, didFinishPickingMediaWithInfo info: [UIKit.UIImagePickerController.InfoKey : Any])
}
extension moduleH5.INS_WKWebBaseViewController : WebKit.WKNavigationDelegate {
  @nonobjc @_Concurrency.MainActor(unsafe) public func webView(_ webView: WebKit.WKWebView, decidePolicyFor navigationAction: WebKit.WKNavigationAction, decisionHandler: @escaping (WebKit.WKNavigationActionPolicy) -> Swift.Void)
  @nonobjc @_Concurrency.MainActor(unsafe) public func webView(_ webView: WebKit.WKWebView, didStartProvisionalNavigation navigation: WebKit.WKNavigation!)
  @nonobjc @_Concurrency.MainActor(unsafe) public func webView(_ webView: WebKit.WKWebView, didCommit navigation: WebKit.WKNavigation!)
  @nonobjc @_Concurrency.MainActor(unsafe) public func webView(_ webView: WebKit.WKWebView, didFinish navigation: WebKit.WKNavigation!)
  @nonobjc @_Concurrency.MainActor(unsafe) public func webView(_ webView: WebKit.WKWebView, didFail navigation: WebKit.WKNavigation!, withError error: Swift.Error)
  @nonobjc @_Concurrency.MainActor(unsafe) public func webView(_ webView: WebKit.WKWebView, didFailProvisionalNavigation navigation: WebKit.WKNavigation!, withError error: Swift.Error)
  @nonobjc @_Concurrency.MainActor(unsafe) public func webViewWebContentProcessDidTerminate(_ webView: WebKit.WKWebView)
}
@available(iOS 14, *)
extension moduleH5.INS_WKWebBaseViewController : PhotosUI.PHPickerViewControllerDelegate {
  @_Concurrency.MainActor(unsafe) public func picker(_ picker: PhotosUI.PHPickerViewController, didFinishPicking results: [PhotosUI.PHPickerResult])
}
